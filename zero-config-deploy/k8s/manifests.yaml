apiVersion: apps/v1
kind: Deployment
metadata:
  name: analyzers
  namespace: mcp-devops-automation
  labels:
    app: analyzers
    app.kubernetes.io/name: analyzers
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: mcp-devops-automation
spec:
  replicas: 2
  selector:
    matchLabels:
      app: analyzers
  template:
    metadata:
      labels:
        app: analyzers
        version: v1
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8080'
        prometheus.io/path: /metrics
    spec:
      serviceAccountName: analyzers
      containers:
        - name: analyzers
          image: ${ECR_REGISTRY}/analyzers:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            requests:
              cpu: 375m
              memory: 384Mi
            limits:
              cpu: 750m
              memory: 768Mi
          env:
            - name: SERVICE_NAME
              value: analyzers
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          envFrom:
            - configMapRef:
                name: analyzers-config
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: calculators
  namespace: mcp-devops-automation
  labels:
    app: calculators
    app.kubernetes.io/name: calculators
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: mcp-devops-automation
spec:
  replicas: 2
  selector:
    matchLabels:
      app: calculators
  template:
    metadata:
      labels:
        app: calculators
        version: v1
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8080'
        prometheus.io/path: /metrics
    spec:
      serviceAccountName: calculators
      containers:
        - name: calculators
          image: ${ECR_REGISTRY}/calculators:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            requests:
              cpu: 375m
              memory: 384Mi
            limits:
              cpu: 750m
              memory: 768Mi
          env:
            - name: SERVICE_NAME
              value: calculators
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          envFrom:
            - configMapRef:
                name: calculators-config
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: generators
  namespace: mcp-devops-automation
  labels:
    app: generators
    app.kubernetes.io/name: generators
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: mcp-devops-automation
spec:
  replicas: 2
  selector:
    matchLabels:
      app: generators
  template:
    metadata:
      labels:
        app: generators
        version: v1
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8080'
        prometheus.io/path: /metrics
    spec:
      serviceAccountName: generators
      containers:
        - name: generators
          image: ${ECR_REGISTRY}/generators:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            requests:
              cpu: 375m
              memory: 384Mi
            limits:
              cpu: 750m
              memory: 768Mi
          env:
            - name: SERVICE_NAME
              value: generators
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          envFrom:
            - configMapRef:
                name: generators-config
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tools
  namespace: mcp-devops-automation
  labels:
    app: tools
    app.kubernetes.io/name: tools
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: mcp-devops-automation
spec:
  replicas: 2
  selector:
    matchLabels:
      app: tools
  template:
    metadata:
      labels:
        app: tools
        version: v1
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8080'
        prometheus.io/path: /metrics
    spec:
      serviceAccountName: tools
      containers:
        - name: tools
          image: ${ECR_REGISTRY}/tools:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            requests:
              cpu: 375m
              memory: 384Mi
            limits:
              cpu: 750m
              memory: 768Mi
          env:
            - name: SERVICE_NAME
              value: tools
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          envFrom:
            - configMapRef:
                name: tools-config
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: types
  namespace: mcp-devops-automation
  labels:
    app: types
    app.kubernetes.io/name: types
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: mcp-devops-automation
spec:
  replicas: 2
  selector:
    matchLabels:
      app: types
  template:
    metadata:
      labels:
        app: types
        version: v1
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8080'
        prometheus.io/path: /metrics
    spec:
      serviceAccountName: types
      containers:
        - name: types
          image: ${ECR_REGISTRY}/types:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            requests:
              cpu: 375m
              memory: 384Mi
            limits:
              cpu: 750m
              memory: 768Mi
          env:
            - name: SERVICE_NAME
              value: types
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          envFrom:
            - configMapRef:
                name: types-config
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: analyzers
  namespace: mcp-devops-automation
  labels:
    app: analyzers
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: analyzers
---
apiVersion: v1
kind: Service
metadata:
  name: calculators
  namespace: mcp-devops-automation
  labels:
    app: calculators
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: calculators
---
apiVersion: v1
kind: Service
metadata:
  name: generators
  namespace: mcp-devops-automation
  labels:
    app: generators
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: generators
---
apiVersion: v1
kind: Service
metadata:
  name: tools
  namespace: mcp-devops-automation
  labels:
    app: tools
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: tools
---
apiVersion: v1
kind: Service
metadata:
  name: types
  namespace: mcp-devops-automation
  labels:
    app: types
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: types
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: analyzers-config
  namespace: mcp-devops-automation
data:
  NODE_ENV: production
  LOG_LEVEL: info
  PORT: '8080'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: calculators-config
  namespace: mcp-devops-automation
data:
  NODE_ENV: production
  LOG_LEVEL: info
  PORT: '8080'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: generators-config
  namespace: mcp-devops-automation
data:
  NODE_ENV: production
  LOG_LEVEL: info
  PORT: '8080'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tools-config
  namespace: mcp-devops-automation
data:
  NODE_ENV: production
  LOG_LEVEL: info
  PORT: '8080'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: types-config
  namespace: mcp-devops-automation
data:
  NODE_ENV: production
  LOG_LEVEL: info
  PORT: '8080'
---
apiVersion: v1
kind: Secret
metadata:
  name: mcp-devops-automation-secrets
  namespace: mcp-devops-automation
type: Opaque
stringData:
  DATABASE_URL: REPLACE_WITH_DATABASE_URL
  API_KEY: REPLACE_WITH_API_KEY
  JWT_SECRET: REPLACE_WITH_JWT_SECRET
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: analyzers
  namespace: mcp-devops-automation
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: analyzers
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 15
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15
        - type: Pods
          value: 4
          periodSeconds: 15
      selectPolicy: Max
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: calculators
  namespace: mcp-devops-automation
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: calculators
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 15
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15
        - type: Pods
          value: 4
          periodSeconds: 15
      selectPolicy: Max
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: generators
  namespace: mcp-devops-automation
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: generators
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 15
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15
        - type: Pods
          value: 4
          periodSeconds: 15
      selectPolicy: Max
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: tools
  namespace: mcp-devops-automation
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tools
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 15
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15
        - type: Pods
          value: 4
          periodSeconds: 15
      selectPolicy: Max
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: types
  namespace: mcp-devops-automation
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: types
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 15
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15
        - type: Pods
          value: 4
          periodSeconds: 15
      selectPolicy: Max
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: analyzers
  namespace: mcp-devops-automation
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: analyzers
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: calculators
  namespace: mcp-devops-automation
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: calculators
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: generators
  namespace: mcp-devops-automation
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: generators
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: tools
  namespace: mcp-devops-automation
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: tools
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: types
  namespace: mcp-devops-automation
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: types
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: analyzers
  namespace: mcp-devops-automation
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::${AWS_ACCOUNT_ID}:role/analyzers-role
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: calculators
  namespace: mcp-devops-automation
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::${AWS_ACCOUNT_ID}:role/calculators-role
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: generators
  namespace: mcp-devops-automation
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::${AWS_ACCOUNT_ID}:role/generators-role
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tools
  namespace: mcp-devops-automation
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::${AWS_ACCOUNT_ID}:role/tools-role
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: types
  namespace: mcp-devops-automation
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::${AWS_ACCOUNT_ID}:role/types-role
